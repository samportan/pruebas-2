<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>