<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        mx17GJH5M4IAAAAASUVORK5CYII=
</value>
  </data>
</root>